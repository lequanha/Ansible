---
- hosts: localhost
  connection: local
  tasks:
  - name: Device ID data
    shell: cat  deviceid.yml
    register: deviceid
  - name: Get all entry values
    shell: VALUES=$( dialog --stdout --ok-label "Submit" --backtitle "RDS Stack Creation"  --title "MySQL RDS"  --form "Create a new RDS" 18 72 0 " DB Name:" 1 1       "magento"       1 36 30 0 " DB Username:"    2 1        "admin"   2 36 30 0 " DB Password:"    3 1        "sm1knztol5qxmi3"   3 36 30 0 " Allocated Storage:"     4 1 "100"   4 36 30 0  " DB Instance Class:" 5 1 "db.t2.micro" 5 36 30 0  " DB Backup Retension:" 6 1 "7" 6 36 30 0  " Enable Provisioned IOPs (yes/no):" 7 1 "no" 7 36 30 0 " Provisioned IOPs:" 8 1 "1000" 8 36 30 0  " Enable MultiAz(yes/no):" 9 1 "no" 9 36 30 0 > VALUES.yml )
  - name: Take DB Name
    shell: head -1 VALUES.yml | tee dbname.yml
    register: dbname
  - name: Take DB Username
    shell: head -2 VALUES.yml | tail -1 | tee dbusername.yml
    register: dbusername
  - name: Take DB Password
    shell: head -3 VALUES.yml | tail -1 | tee dbpassword.yml
    register: dbpassword
  - name: Take DB Allocated Storage
    shell: head -4 VALUES.yml | tail -1 | tee dballocatedstorage.yml
    register: dballocatedstorage
  - name: Take DB Instance Class
    shell: head -5 VALUES.yml | tail -1 | tee dbinstanceclass.yml
    register: dbinstanceclass
  - name: Take DB Backup Retension
    shell: head -6 VALUES.yml | tail -1 | tee dbbackupretension.yml
    register: dbbackupretension
  - name: Enable Provisoned IOPs
    shell: head -7 VALUES.yml | tail -1 | tee enableprovisionediops.yml
    register: enableprovisionediops
  - name: Take Provisioned IOPs
    shell: head -8 VALUES.yml | tail -1 | tee enterprovisionediops.yml
    register: enterprovisionediops
  - name: Enable MultiAZ
    shell: head -9 VALUES.yml | tail -1 | tee enablemultiaz.yml
    register: enablemultiaz
  - name: Take Security Group for Services
    shell: cat SecGrpAccessIdServices.yml
    register: secgrpaccessidservices
  - name: Take Security Group for Bastion
    shell: cat SecGrpAccessIdBastion.yml
    register: secgrpaccessidbastion
  - name: Download RDS template
    shell: aws s3 cp s3://ansible-autostack/templates/Rds.All.template ./ --region {{ region }}
  - name: Create RDS Instance
    cloudformation:
        stack_name: "magaws-RDS"
        state: "present"
        region: "{{ region }}"
        disable_rollback: true
        template: "Rds.All.template"
        template_parameters:
            DeviceId: "{{ deviceid.stdout }}"
            DBName: "{{ dbname.stdout }}"
            DBUsername: "{{ dbusername.stdout }}"
            DBPassword: "{{ dbpassword.stdout }}"
            DBAllocatedStorage: "{{ dballocatedstorage.stdout }}"
            DBInstanceClass: "{{ dbinstanceclass.stdout }}"
            DBBackupRetension: "{{ dbbackupretension.stdout }}"
            EnableProvisionedIOPs: "{{ enableprovisionediops.stdout }}"
            EnterProvisionedIOPs: "{{ enterprovisionediops.stdout }}"
            EnableMultiAz: "{{ enablemultiaz.stdout }}"
            SecGrpAccessIdServices: "{{ secgrpaccessidservices.stdout }}"
            SecGrpAccessIdBastion: "{{ secgrpaccessidbastion.stdout }}"
    register: rdsoutput
  - name: Store RDS
    shell: echo "{{ rdsoutput.stack_outputs.DBConnectionName }}" > rdsendpoint.yml
